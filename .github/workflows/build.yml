name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build, Analyze, and Dockerize
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Build Application
        run: npm run build

      # Dockerize the application
      - name: Build Docker image for the application
        run: |
          docker build -t my-application .
      
      # Run SonarQube in a Docker container
      - name: Run SonarQube container
        run: |
          docker run -d --name sonarqube -p 9000:9000 sonarqube

      # Execute SonarQube scan
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_SCANNER_OPTS: -X

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Check out 
        uses: actions/checkout@v3
      
      # Build Docker image for the application
      - name: Build Docker image for the application
        run: |
          docker build -t my-application .

      # Publish Docker image to a container registry
      - name: Publish Docker image to registry
        run: |
          docker login -u grcorreia -p ${{ secrets.DOCKER_HUB_TOKEN }}
          docker push my-application

      # Deploy the application using Vercel or any other platform
      - name: Deploy to Vercel
        run: |
          npm install -g vercel
          vercel --prod
